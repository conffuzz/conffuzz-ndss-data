[I] Attempting to instrument callback ngx_regex_malloc
[E] {instrumentation.cpp:469} Got function argument numbers (2) from cache!
[I] Attempting to instrument callback ngx_regex_free
[E] {instrumentation.cpp:469} Got function argument numbers (2) from cache!
2022/11/03 23:07:22 [notice] 9039#0: using the "epoll" event method
2022/11/03 23:07:22 [notice] 9039#0: nginx/1.21.6
2022/11/03 23:07:22 [notice] 9039#0: built by gcc 11.3.0 (Ubuntu 11.3.0-1ubuntu1~22.04) 
2022/11/03 23:07:22 [notice] 9039#0: OS: Linux 6.0.0-1-amd64
2022/11/03 23:07:22 [notice] 9039#0: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2022/11/03 23:07:24 [info] 9039#0: *1 client 172.17.0.2 closed keepalive connection
=================================================================
==9039==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c000000a46 at pc 0x5555556a6716 bp 0x7fffffffe000 sp 0x7fffffffdff0
READ of size 8 at 0x60c000000a46 thread T0
    #0 0x5555556a6715 in ngx_regex_exec src/core/ngx_regex.c:442
    #1 0x55555570e26b in ngx_http_regex_exec src/http/ngx_http_variables.c:2579
    #2 0x5555556e0a0f in ngx_http_find_virtual_server src/http/ngx_http_request.c:2364
    #3 0x5555556dfd0c in ngx_http_set_virtual_server src/http/ngx_http_request.c:2252
    #4 0x5555556dd6a9 in ngx_http_process_host src/http/ngx_http_request.c:1816
    #5 0x5555556db82f in ngx_http_process_request_headers src/http/ngx_http_request.c:1470
    #6 0x5555556d9bbf in ngx_http_process_request_line src/http/ngx_http_request.c:1165
    #7 0x5555556d58cf in ngx_http_wait_request_handler src/http/ngx_http_request.c:503
    #8 0x55555567f9de in ngx_epoll_process_events src/event/modules/ngx_epoll_module.c:901
    #9 0x555555650b78 in ngx_process_events_and_timers src/event/ngx_event.c:248
    #10 0x555555675ae4 in ngx_single_process_cycle src/os/unix/ngx_process_cycle.c:300
    #11 0x5555555c7ffd in main src/core/nginx.c:380
    #12 0x7fffe065dd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)
    #13 0x7fffe065de3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)
    #14 0x5555555c7024 in _start (/root/nginx-1.21.6/objs/nginx+0x73024)

0x60c000000a46 is located 70 bytes inside of 120-byte region [0x60c000000a00,0x60c000000a78)
freed by thread T0 here:
    #0 0x7fffe137b517 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127
    #1 0x7fffe0c4fecb in CRYPTO_free crypto/mem.c:312
    #2 0x7fffe0a3b5a0 in BIO_free crypto/bio/bio_lib.c:138
    #3 0x7fffe0c86d99 in PEM_read_bio_ex crypto/pem/pem_lib.c:958
    #4 0x7fffe0c832ae in pem_bytes_read_bio_flags crypto/pem/pem_lib.c:247
    #5 0x7fffe0c8373e in PEM_bytes_read_bio_secmem crypto/pem/pem_lib.c:285
    #6 0x7fffe0c882e6 in PEM_read_bio_PrivateKey crypto/pem/pem_pkey.c:35
    #7 0x555555683b5e in ngx_ssl_load_certificate_key src/event/ngx_event_openssl.c:797
    #8 0x5555556828a2 in ngx_ssl_certificate src/event/ngx_event_openssl.c:518
    #9 0x5555556820c7 in ngx_ssl_certificates src/event/ngx_event_openssl.c:410
    #10 0x5555557c7655 in ngx_http_ssl_merge_srv_conf src/http/modules/ngx_http_ssl_module.c:787
    #11 0x5555556aa283 in ngx_http_merge_servers src/http/ngx_http.c:584
    #12 0x5555556a87a1 in ngx_http_block src/http/ngx_http.c:270
    #13 0x555555622bb0 in ngx_conf_handler src/core/ngx_conf_file.c:463
    #14 0x555555621bcd in ngx_conf_parse src/core/ngx_conf_file.c:319
    #15 0x55555561793c in ngx_init_cycle src/core/ngx_cycle.c:284
    #16 0x5555555c76b0 in main src/core/nginx.c:292
    #17 0x7fffe065dd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)

previously allocated by thread T0 here:
    #0 0x7fffe137b867 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145
    #1 0x7fffe0c4fc6a in CRYPTO_malloc crypto/mem.c:222
    #2 0x7fffe0c4fca1 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7fffe0a3ae75 in BIO_new crypto/bio/bio_lib.c:73
    #4 0x7fffe0c864a7 in PEM_read_bio_ex crypto/pem/pem_lib.c:910
    #5 0x7fffe0c832ae in pem_bytes_read_bio_flags crypto/pem/pem_lib.c:247
    #6 0x7fffe0c8373e in PEM_bytes_read_bio_secmem crypto/pem/pem_lib.c:285
    #7 0x7fffe0c882e6 in PEM_read_bio_PrivateKey crypto/pem/pem_pkey.c:35
    #8 0x555555683b5e in ngx_ssl_load_certificate_key src/event/ngx_event_openssl.c:797
    #9 0x5555556828a2 in ngx_ssl_certificate src/event/ngx_event_openssl.c:518
    #10 0x5555556820c7 in ngx_ssl_certificates src/event/ngx_event_openssl.c:410
    #11 0x5555557c7655 in ngx_http_ssl_merge_srv_conf src/http/modules/ngx_http_ssl_module.c:787
    #12 0x5555556aa283 in ngx_http_merge_servers src/http/ngx_http.c:584
    #13 0x5555556a87a1 in ngx_http_block src/http/ngx_http.c:270
    #14 0x555555622bb0 in ngx_conf_handler src/core/ngx_conf_file.c:463
    #15 0x555555621bcd in ngx_conf_parse src/core/ngx_conf_file.c:319
    #16 0x55555561793c in ngx_init_cycle src/core/ngx_cycle.c:284
    #17 0x5555555c76b0 in main src/core/nginx.c:292
    #18 0x7fffe065dd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)

SUMMARY: AddressSanitizer: heap-use-after-free src/core/ngx_regex.c:442 in ngx_regex_exec
Shadow bytes around the buggy address:
  0x0c187fff80f0: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c187fff8100: fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa
  0x0c187fff8110: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c187fff8120: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c187fff8130: fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa
=>0x0c187fff8140: fd fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd fa
  0x0c187fff8150: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c187fff8160: fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa
  0x0c187fff8170: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c187fff8180: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff8190: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==9039==ABORTING
