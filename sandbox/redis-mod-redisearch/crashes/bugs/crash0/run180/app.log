44332:C 08 Nov 2022 09:55:19.768 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
44332:C 08 Nov 2022 09:55:19.794 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=44332, just started
44332:C 08 Nov 2022 09:55:19.796 # Configuration loaded
44332:M 08 Nov 2022 09:55:19.880 * monotonic clock: POSIX clock_gettime
44332:M 08 Nov 2022 09:55:20.339 * Running mode=standalone, port=6379.
44332:M 08 Nov 2022 09:55:20.340 # Server initialized
44332:M 08 Nov 2022 09:55:20.342 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
44332:M 08 Nov 2022 09:55:20.780 * <search> Redis version found by RedisSearch : 6.2.6 - oss
44332:M 08 Nov 2022 09:55:20.783 * <search> RediSearch version 99.99.99 (Git=HEAD-f3577f7e)
44332:M 08 Nov 2022 09:55:20.800 * <search> Low level api version 1 initialized successfully
44332:M 08 Nov 2022 09:55:20.818 * <search> concurrent writes: OFF, gc: ON, prefix min length: 2, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, search pool size: 20, index pool size: 8, 
44332:M 08 Nov 2022 09:55:20.862 * <search> Initialized thread pool!
44332:M 08 Nov 2022 09:55:20.881 * <search> Enabled diskless replication
44332:M 08 Nov 2022 09:55:20.947 * Module 'search' loaded from /root/RediSearch/bin/linux-x64-debug/search/redisearch.so
44332:M 08 Nov 2022 09:55:21.057 * Ready to accept connections
AddressSanitizer:DEADLYSIGNAL
=================================================================
==44332==ERROR: AddressSanitizer: SEGV on unknown address (pc 0x5555557ecb2c bp 0x7fffffffe440 sp 0x7fffffffe340 T0)
==44332==The signal is caused by a READ memory access.
==44332==Hint: this fault was caused by a dereference of a high value address (see register values below).  Dissassemble the provided pc to learn which register was used.
    #0 0x5555557ecb2c in RedisModuleCommandDispatcher /root/redis-6.2.6/src/module.c:709
    #1 0x55555566ecb3 in call /root/redis-6.2.6/src/server.c:3721
    #2 0x5555556725f5 in processCommand /root/redis-6.2.6/src/server.c:4241
    #3 0x5555556a49b1 in processCommandAndResetClient /root/redis-6.2.6/src/networking.c:2039
    #4 0x5555556a50f5 in processInputBuffer /root/redis-6.2.6/src/networking.c:2140
    #5 0x5555556a5a6f in readQueryFromClient /root/redis-6.2.6/src/networking.c:2226
    #6 0x55555587042c in callHandler /root/redis-6.2.6/src/connhelpers.h:79
    #7 0x555555871759 in connSocketEventHandler /root/redis-6.2.6/src/connection.c:295
    #8 0x55555565a3b3 in aeProcessEvents /root/redis-6.2.6/src/ae.c:427
    #9 0x55555565aaa1 in aeMain /root/redis-6.2.6/src/ae.c:487
    #10 0x55555567c2b1 in main /root/redis-6.2.6/src/server.c:6401
    #11 0x7fffdee0fd09 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x23d09)
    #12 0x55555564d189 in _start (/root/redis-6.2.6/src/redis-server+0xf9189)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /root/redis-6.2.6/src/module.c:709 in RedisModuleCommandDispatcher
==44332==ABORTING
