[I] Recursing from pcap_t into pcap
[I] Recursing from u_char into __u_char
[I] Recursing from __u_char into unsigned char
[E] Not able to find type information for u_char in DWARF
[I] Recursing from bpf_u_int32 into u_int
[I] Recursing from u_int into __u_int
[I] Recursing from __u_int into unsigned int
[E] Not able to find type information for bpf_u_int32 in DWARF
[I] Recursing from pcap_dumper_t into pcap_dumper
[E] Not able to find type information for pcap_dumper_t in DWARF
[I] Recursing from file into _IO_FILE
[I] Recursing from pcap_if_t into pcap_if
=================================================================
==53438==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000008 at pc 0x555555584d5f bp 0x7fffffffe2f0 sp 0x7fffffffe2e8
READ of size 8 at 0x604000000008 thread T0
    #0 0x555555584d5e in get_interface_list_findalldevs /root/wireshark-3.4.12/caputils/capture-pcap-util.c:686
    #1 0x555555583cae in get_interface_list /root/wireshark-3.4.12/caputils/capture-pcap-util-unix.c:43
    #2 0x555555564231 in capture_interface_list /root/wireshark-3.4.12/dumpcap.c:766
    #3 0x55555557c76c in capture_opts_add_iface_opt /root/wireshark-3.4.12/capture_opts.c:699
    #4 0x55555557ecba in capture_opts_default_iface_if_necessary /root/wireshark-3.4.12/capture_opts.c:1116
    #5 0x555555575c14 in main /root/wireshark-3.4.12/dumpcap.c:5286
    #6 0x7fffe21a57fc in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x237fc)
    #7 0x555555562d59 in _start (/root/wireshark_build/run/dumpcap+0xed59)

0x604000000008 is located 8 bytes to the left of 37-byte region [0x604000000010,0x604000000035)
allocated by thread T0 here:
    #0 0x7fffe27257cf in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145
    #1 0x7fffe21b38fe  (/lib/x86_64-linux-gnu/libc.so.6+0x318fe)

SUMMARY: AddressSanitizer: heap-buffer-overflow /root/wireshark-3.4.12/caputils/capture-pcap-util.c:686 in get_interface_list_findalldevs
Shadow bytes around the buggy address:
  0x0c087fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c087fff8000: fa[fa]00 00 00 00 05 fa fa fa fd fd fd fd fd fd
  0x0c087fff8010: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa
  0x0c087fff8020: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x0c087fff8030: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x0c087fff8040: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
  0x0c087fff8050: fa fa 00 00 00 00 00 fa fa fa 00 00 00 00 00 fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==53438==ABORTING
